package com.collectorhub.collectorhub.dto.mappers;

import com.collectorhub.collectorhub.controller.request.GamificationConditionRequest;
import com.collectorhub.collectorhub.controller.request.GamificationRequest;
import com.collectorhub.collectorhub.controller.response.GamificationConditionResponse;
import com.collectorhub.collectorhub.controller.response.GamificationResponse;
import com.collectorhub.collectorhub.database.entities.GamificationConditionEntity;
import com.collectorhub.collectorhub.database.entities.GamificationEntity;
import com.collectorhub.collectorhub.dto.GamificationConditionDto;
import com.collectorhub.collectorhub.dto.GamificationDto;
import org.mapstruct.Mapper;

import java.util.List;

@Mapper(componentModel = "spring")
public interface AbstractGamificationConditionDtoMapper {

    GamificationConditionDto fromGamificationConditionEntityToGamificationConditionDto(GamificationConditionEntity gamificationConditionEntity);

    List<GamificationConditionDto> fromGamificationConditionEntityListToGamificationConditionDtoList(List<GamificationConditionEntity> gamificationConditionEntityList);

    GamificationConditionDto fromGamificationConditionRequestToGamificationConditionDto(GamificationConditionRequest gamificationConditionRequest);

    GamificationConditionResponse fromGamificationConditionDtoToGamificationConditionResponse(GamificationConditionDto gamificationConditionDto);

    List<GamificationConditionResponse> fromGamificationConditionDtoListToGamificationConditionResponseList(List<GamificationConditionDto> gamificationConditionDtoList);

    GamificationConditionEntity fromGamificationConditionDtoToGamificationConditionEntity(GamificationConditionDto gamificationConditionDto);

}
